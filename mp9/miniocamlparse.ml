type token =
  | INTEGER_LITERAL of (int)
  | FLOAT_LITERAL of (float)
  | STRING_LITERAL of (string)
  | IDENT of (string)
  | EOF
  | LET
  | IN
  | REC
  | FUN
  | TRUE
  | FALSE
  | REF
  | IF
  | THEN
  | ELSE
  | HD
  | TL
  | FST
  | SND
  | LPAREN
  | RPAREN
  | LBRACK
  | RBRACK
  | SEMICOLON
  | COMMA
  | RIGHTARROW
  | EQ
  | LT
  | GT
  | NEQ
  | DEREF
  | ASSIGN
  | CONS
  | ANDAND
  | OROR
  | PLUS
  | MINUS
  | MULT
  | DIV
  | CARET
  | AT
  | NOT
  | APP

open Parsing;;
let _ = parse_error;;
# 1 "miniocamlparse.mly"

  open Miniocamlast
# 52 "miniocamlparse.ml"
let yytransl_const = [|
    0 (* EOF *);
  261 (* LET *);
  262 (* IN *);
  263 (* REC *);
  264 (* FUN *);
  265 (* TRUE *);
  266 (* FALSE *);
  267 (* REF *);
  268 (* IF *);
  269 (* THEN *);
  270 (* ELSE *);
  271 (* HD *);
  272 (* TL *);
  273 (* FST *);
  274 (* SND *);
  275 (* LPAREN *);
  276 (* RPAREN *);
  277 (* LBRACK *);
  278 (* RBRACK *);
  279 (* SEMICOLON *);
  280 (* COMMA *);
  281 (* RIGHTARROW *);
  282 (* EQ *);
  283 (* LT *);
  284 (* GT *);
  285 (* NEQ *);
  286 (* DEREF *);
  287 (* ASSIGN *);
  288 (* CONS *);
  289 (* ANDAND *);
  290 (* OROR *);
  291 (* PLUS *);
  292 (* MINUS *);
  293 (* MULT *);
  294 (* DIV *);
  295 (* CARET *);
  296 (* AT *);
  297 (* NOT *);
  298 (* APP *);
    0|]

let yytransl_block = [|
  257 (* INTEGER_LITERAL *);
  258 (* FLOAT_LITERAL *);
  259 (* STRING_LITERAL *);
  260 (* IDENT *);
    0|]

let yylhs = "\255\255\
\001\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
\002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
\002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
\002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
\002\000\002\000\002\000\002\000\002\000\003\000\004\000\004\000\
\000\000"

let yylen = "\002\000\
\002\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
\001\000\001\000\001\000\001\000\001\000\003\000\002\000\003\000\
\004\000\005\000\004\000\002\000\006\000\004\000\000\000\002\000\
\002\000"

let yydefred = "\000\000\
\000\000\000\000\026\000\027\000\025\000\000\000\000\000\028\000\
\029\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\041\000\000\000\039\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\031\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\032\000\030\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\040\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000"

let yydgoto = "\002\000\
\020\000\054\000\024\000\055\000"

let yysindex = "\255\255\
\213\003\000\000\000\000\000\000\000\000\254\254\000\255\000\000\
\000\000\213\003\213\003\213\003\213\003\213\003\213\003\213\003\
\229\255\213\003\213\003\000\000\001\000\000\000\004\255\003\255\
\241\254\251\254\097\255\251\254\251\254\251\254\251\254\140\255\
\000\000\182\255\251\254\251\254\000\000\213\003\213\003\213\003\
\213\003\213\003\213\003\213\003\213\003\213\003\213\003\213\003\
\213\003\213\003\213\003\213\003\213\003\172\003\255\254\023\255\
\213\003\213\003\213\003\000\000\000\000\229\003\229\003\252\254\
\252\254\252\254\252\254\229\003\172\003\035\004\004\004\056\255\
\056\255\066\004\066\004\084\004\084\004\000\000\213\003\213\003\
\172\003\172\003\131\003\172\003\172\003\213\003\172\003"

let yyrindex = "\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\042\000\000\000\082\000\122\000\162\000\202\000\000\000\
\000\000\000\000\242\000\026\001\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\068\003\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\008\003\036\003\051\002\
\085\002\122\002\158\002\058\003\078\003\194\002\229\002\227\001\
\011\002\147\001\187\001\067\001\107\001\000\000\000\000\000\000\
\081\003\096\003\000\000\024\255\100\003\000\000\111\003"

let yygindex = "\000\000\
\000\000\005\000\015\000\000\000"

let yytablesize = 1405
let yytable = "\001\000\
\037\000\022\000\078\000\025\000\023\000\021\000\010\000\022\000\
\057\000\058\000\012\000\013\000\014\000\015\000\026\000\027\000\
\028\000\029\000\030\000\031\000\032\000\034\000\035\000\036\000\
\079\000\018\000\045\000\045\000\080\000\038\000\048\000\049\000\
\050\000\051\000\052\000\053\000\019\000\056\000\000\000\000\000\
\000\000\018\000\062\000\063\000\064\000\065\000\066\000\067\000\
\068\000\069\000\070\000\071\000\072\000\073\000\074\000\075\000\
\076\000\077\000\000\000\000\000\000\000\081\000\082\000\083\000\
\000\000\000\000\010\000\000\000\000\000\000\000\012\000\013\000\
\014\000\015\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\021\000\000\000\084\000\085\000\018\000\000\000\045\000\
\000\000\000\000\087\000\000\000\050\000\051\000\052\000\053\000\
\019\000\003\000\000\000\004\000\005\000\006\000\000\000\000\000\
\007\000\008\000\009\000\010\000\011\000\059\000\000\000\012\000\
\013\000\014\000\015\000\016\000\000\000\017\000\000\000\038\000\
\039\000\022\000\040\000\041\000\042\000\043\000\018\000\044\000\
\045\000\046\000\047\000\048\000\049\000\050\000\051\000\052\000\
\053\000\019\000\000\000\000\000\003\000\000\000\004\000\005\000\
\006\000\000\000\000\000\007\000\008\000\009\000\010\000\011\000\
\000\000\000\000\012\000\013\000\014\000\015\000\016\000\060\000\
\017\000\023\000\038\000\039\000\000\000\040\000\041\000\042\000\
\043\000\018\000\044\000\045\000\046\000\047\000\048\000\049\000\
\050\000\051\000\052\000\053\000\019\000\000\000\003\000\000\000\
\004\000\005\000\006\000\000\000\000\000\007\000\008\000\009\000\
\010\000\011\000\000\000\000\000\012\000\013\000\014\000\015\000\
\016\000\024\000\017\000\061\000\038\000\039\000\000\000\040\000\
\041\000\042\000\043\000\018\000\044\000\045\000\046\000\047\000\
\048\000\049\000\050\000\051\000\052\000\053\000\019\000\000\000\
\000\000\000\000\000\000\000\000\000\000\003\000\000\000\004\000\
\005\000\006\000\000\000\000\000\007\000\008\000\009\000\010\000\
\011\000\019\000\000\000\012\000\013\000\014\000\015\000\016\000\
\000\000\017\000\033\000\000\000\000\000\000\000\000\000\000\000\
\000\000\003\000\018\000\004\000\005\000\006\000\000\000\000\000\
\007\000\008\000\009\000\010\000\011\000\019\000\000\000\012\000\
\013\000\014\000\015\000\016\000\000\000\017\000\000\000\038\000\
\039\000\020\000\040\000\041\000\042\000\043\000\018\000\044\000\
\045\000\046\000\047\000\048\000\049\000\050\000\051\000\052\000\
\053\000\019\000\018\000\000\000\018\000\018\000\018\000\018\000\
\000\000\018\000\018\000\018\000\000\000\018\000\018\000\018\000\
\000\000\000\000\000\000\000\000\018\000\018\000\018\000\018\000\
\018\000\018\000\015\000\018\000\018\000\018\000\018\000\000\000\
\018\000\000\000\018\000\018\000\018\000\018\000\018\000\018\000\
\018\000\018\000\021\000\000\000\021\000\021\000\021\000\021\000\
\000\000\021\000\021\000\021\000\000\000\021\000\021\000\021\000\
\000\000\000\000\000\000\000\000\021\000\021\000\021\000\021\000\
\021\000\021\000\016\000\021\000\021\000\021\000\021\000\000\000\
\021\000\000\000\021\000\021\000\021\000\021\000\021\000\021\000\
\021\000\021\000\022\000\000\000\022\000\022\000\022\000\022\000\
\000\000\022\000\022\000\022\000\000\000\022\000\022\000\022\000\
\000\000\000\000\000\000\000\000\022\000\022\000\022\000\022\000\
\022\000\022\000\013\000\022\000\022\000\022\000\022\000\000\000\
\022\000\000\000\022\000\022\000\022\000\022\000\022\000\022\000\
\022\000\022\000\023\000\000\000\023\000\023\000\023\000\023\000\
\000\000\023\000\023\000\023\000\000\000\023\000\023\000\023\000\
\000\000\000\000\000\000\000\000\023\000\023\000\023\000\023\000\
\023\000\023\000\014\000\023\000\023\000\023\000\023\000\000\000\
\023\000\000\000\023\000\023\000\023\000\023\000\023\000\023\000\
\023\000\023\000\024\000\000\000\024\000\024\000\024\000\024\000\
\000\000\024\000\024\000\024\000\000\000\024\000\024\000\024\000\
\000\000\000\000\000\000\000\000\024\000\024\000\024\000\024\000\
\024\000\024\000\011\000\024\000\024\000\024\000\024\000\000\000\
\024\000\000\000\024\000\024\000\024\000\024\000\024\000\024\000\
\024\000\024\000\019\000\000\000\019\000\019\000\019\000\019\000\
\000\000\019\000\019\000\019\000\000\000\019\000\019\000\019\000\
\000\000\000\000\000\000\000\000\019\000\019\000\019\000\019\000\
\019\000\019\000\012\000\019\000\019\000\019\000\019\000\000\000\
\019\000\000\000\019\000\019\000\019\000\019\000\019\000\019\000\
\019\000\019\000\020\000\000\000\020\000\020\000\020\000\020\000\
\000\000\020\000\020\000\020\000\000\000\020\000\020\000\020\000\
\000\000\000\000\000\000\000\000\020\000\020\000\020\000\020\000\
\020\000\020\000\004\000\020\000\020\000\020\000\020\000\000\000\
\020\000\000\000\020\000\020\000\020\000\020\000\020\000\020\000\
\020\000\020\000\000\000\015\000\000\000\015\000\015\000\015\000\
\015\000\000\000\015\000\015\000\015\000\000\000\015\000\015\000\
\015\000\000\000\000\000\000\000\005\000\015\000\015\000\015\000\
\015\000\015\000\015\000\000\000\015\000\015\000\015\000\015\000\
\000\000\015\000\000\000\015\000\015\000\015\000\015\000\015\000\
\015\000\015\000\015\000\016\000\000\000\016\000\016\000\016\000\
\016\000\000\000\016\000\016\000\016\000\000\000\016\000\016\000\
\016\000\006\000\000\000\000\000\000\000\016\000\016\000\016\000\
\016\000\016\000\016\000\000\000\016\000\016\000\016\000\016\000\
\000\000\016\000\000\000\016\000\016\000\016\000\016\000\016\000\
\016\000\016\000\016\000\013\000\000\000\013\000\013\000\013\000\
\013\000\000\000\013\000\013\000\013\000\007\000\013\000\013\000\
\013\000\000\000\000\000\000\000\000\000\013\000\013\000\013\000\
\013\000\013\000\013\000\000\000\013\000\013\000\013\000\013\000\
\000\000\013\000\000\000\013\000\013\000\013\000\013\000\013\000\
\013\000\000\000\000\000\014\000\000\000\014\000\014\000\014\000\
\014\000\009\000\014\000\014\000\014\000\000\000\014\000\014\000\
\014\000\000\000\000\000\000\000\000\000\014\000\014\000\014\000\
\014\000\014\000\014\000\000\000\014\000\014\000\014\000\014\000\
\000\000\014\000\000\000\014\000\014\000\014\000\014\000\014\000\
\014\000\000\000\000\000\011\000\010\000\011\000\011\000\011\000\
\011\000\000\000\011\000\011\000\011\000\000\000\011\000\011\000\
\011\000\000\000\000\000\000\000\000\000\011\000\011\000\011\000\
\011\000\011\000\011\000\000\000\011\000\011\000\011\000\011\000\
\000\000\011\000\000\000\011\000\011\000\011\000\011\000\002\000\
\000\000\000\000\000\000\012\000\000\000\012\000\012\000\012\000\
\012\000\000\000\012\000\012\000\012\000\000\000\012\000\012\000\
\012\000\000\000\000\000\000\000\000\000\012\000\012\000\012\000\
\012\000\012\000\012\000\003\000\012\000\012\000\012\000\012\000\
\000\000\012\000\000\000\012\000\012\000\012\000\012\000\000\000\
\000\000\000\000\000\000\004\000\000\000\004\000\004\000\004\000\
\004\000\008\000\004\000\004\000\004\000\000\000\004\000\004\000\
\004\000\000\000\000\000\036\000\000\000\004\000\004\000\004\000\
\004\000\004\000\004\000\000\000\000\000\017\000\000\000\000\000\
\033\000\004\000\000\000\004\000\004\000\005\000\000\000\005\000\
\005\000\005\000\005\000\000\000\005\000\005\000\005\000\035\000\
\005\000\005\000\005\000\034\000\000\000\000\000\000\000\005\000\
\005\000\005\000\005\000\005\000\005\000\000\000\037\000\000\000\
\000\000\000\000\000\000\005\000\000\000\005\000\005\000\000\000\
\000\000\000\000\006\000\000\000\006\000\006\000\006\000\006\000\
\000\000\006\000\006\000\006\000\000\000\006\000\006\000\006\000\
\000\000\000\000\000\000\000\000\006\000\006\000\006\000\006\000\
\006\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\
\006\000\000\000\006\000\006\000\000\000\000\000\007\000\000\000\
\007\000\007\000\007\000\007\000\000\000\007\000\007\000\007\000\
\000\000\007\000\007\000\007\000\000\000\000\000\000\000\000\000\
\007\000\007\000\007\000\007\000\007\000\007\000\000\000\000\000\
\000\000\000\000\000\000\000\000\007\000\000\000\007\000\007\000\
\000\000\000\000\009\000\000\000\009\000\009\000\009\000\009\000\
\000\000\009\000\009\000\009\000\000\000\009\000\009\000\009\000\
\000\000\000\000\000\000\000\000\009\000\009\000\009\000\009\000\
\009\000\009\000\000\000\000\000\000\000\000\000\000\000\000\000\
\009\000\000\000\009\000\009\000\000\000\010\000\000\000\010\000\
\010\000\010\000\010\000\000\000\010\000\010\000\010\000\000\000\
\010\000\010\000\010\000\000\000\000\000\000\000\000\000\010\000\
\010\000\010\000\010\000\010\000\010\000\000\000\000\000\000\000\
\000\000\000\000\000\000\010\000\000\000\000\000\010\000\000\000\
\002\000\000\000\002\000\002\000\002\000\002\000\000\000\002\000\
\002\000\002\000\000\000\002\000\002\000\002\000\000\000\000\000\
\000\000\000\000\002\000\002\000\002\000\002\000\000\000\000\000\
\000\000\000\000\000\000\000\000\003\000\000\000\003\000\003\000\
\003\000\003\000\000\000\003\000\003\000\003\000\000\000\003\000\
\003\000\003\000\000\000\000\000\000\000\000\000\003\000\003\000\
\003\000\003\000\008\000\000\000\008\000\008\000\008\000\008\000\
\000\000\008\000\008\000\008\000\000\000\008\000\008\000\008\000\
\000\000\036\000\000\000\000\000\008\000\008\000\008\000\008\000\
\036\000\036\000\000\000\017\000\000\000\000\000\033\000\036\000\
\000\000\036\000\017\000\017\000\000\000\033\000\033\000\000\000\
\000\000\017\000\000\000\017\000\033\000\035\000\033\000\000\000\
\000\000\034\000\000\000\000\000\035\000\035\000\000\000\000\000\
\034\000\034\000\000\000\035\000\037\000\035\000\000\000\034\000\
\000\000\034\000\000\000\037\000\037\000\000\000\000\000\000\000\
\000\000\000\000\037\000\003\000\037\000\004\000\005\000\006\000\
\000\000\000\000\007\000\008\000\009\000\010\000\011\000\000\000\
\086\000\012\000\013\000\014\000\015\000\016\000\000\000\017\000\
\000\000\038\000\039\000\000\000\040\000\041\000\042\000\043\000\
\018\000\044\000\045\000\046\000\047\000\048\000\049\000\050\000\
\051\000\052\000\053\000\019\000\003\000\000\000\004\000\005\000\
\006\000\000\000\000\000\007\000\008\000\009\000\010\000\011\000\
\000\000\000\000\012\000\013\000\014\000\015\000\016\000\000\000\
\017\000\000\000\038\000\039\000\000\000\040\000\041\000\042\000\
\043\000\018\000\044\000\045\000\046\000\047\000\048\000\049\000\
\050\000\051\000\052\000\053\000\019\000\003\000\000\000\004\000\
\005\000\006\000\000\000\000\000\007\000\008\000\009\000\010\000\
\011\000\000\000\000\000\012\000\013\000\014\000\015\000\016\000\
\000\000\017\000\000\000\000\000\000\000\000\000\000\000\010\000\
\000\000\000\000\018\000\012\000\013\000\014\000\015\000\000\000\
\000\000\000\000\000\000\038\000\039\000\019\000\040\000\041\000\
\042\000\043\000\018\000\044\000\045\000\046\000\047\000\048\000\
\049\000\050\000\051\000\052\000\053\000\019\000\010\000\000\000\
\000\000\000\000\012\000\013\000\014\000\015\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\040\000\041\000\042\000\
\043\000\018\000\000\000\045\000\046\000\000\000\048\000\049\000\
\050\000\051\000\052\000\053\000\019\000\010\000\000\000\000\000\
\000\000\012\000\013\000\014\000\015\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\040\000\041\000\042\000\043\000\
\018\000\000\000\045\000\000\000\000\000\048\000\049\000\050\000\
\051\000\052\000\053\000\019\000\010\000\000\000\000\000\000\000\
\012\000\013\000\014\000\015\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\010\000\018\000\
\000\000\045\000\012\000\013\000\014\000\015\000\000\000\000\000\
\052\000\053\000\019\000\000\000\000\000\000\000\000\000\000\000\
\000\000\018\000\000\000\045\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\019\000"

let yycheck = "\001\000\
\000\000\004\001\004\001\004\001\007\001\001\000\011\001\004\001\
\006\001\025\001\015\001\016\001\017\001\018\001\010\000\011\000\
\012\000\013\000\014\000\015\000\016\000\017\000\018\000\019\000\
\026\001\030\001\032\001\032\001\006\001\006\001\035\001\036\001\
\037\001\038\001\039\001\040\001\041\001\023\000\255\255\255\255\
\255\255\000\000\038\000\039\000\040\000\041\000\042\000\043\000\
\044\000\045\000\046\000\047\000\048\000\049\000\050\000\051\000\
\052\000\053\000\255\255\255\255\255\255\057\000\058\000\059\000\
\255\255\255\255\011\001\255\255\255\255\255\255\015\001\016\001\
\017\001\018\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\000\000\255\255\079\000\080\000\030\001\255\255\032\001\
\255\255\255\255\086\000\255\255\037\001\038\001\039\001\040\001\
\041\001\001\001\255\255\003\001\004\001\005\001\255\255\255\255\
\008\001\009\001\010\001\011\001\012\001\013\001\255\255\015\001\
\016\001\017\001\018\001\019\001\255\255\021\001\255\255\023\001\
\024\001\000\000\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\033\001\034\001\035\001\036\001\037\001\038\001\039\001\
\040\001\041\001\255\255\255\255\001\001\255\255\003\001\004\001\
\005\001\255\255\255\255\008\001\009\001\010\001\011\001\012\001\
\255\255\255\255\015\001\016\001\017\001\018\001\019\001\020\001\
\021\001\000\000\023\001\024\001\255\255\026\001\027\001\028\001\
\029\001\030\001\031\001\032\001\033\001\034\001\035\001\036\001\
\037\001\038\001\039\001\040\001\041\001\255\255\001\001\255\255\
\003\001\004\001\005\001\255\255\255\255\008\001\009\001\010\001\
\011\001\012\001\255\255\255\255\015\001\016\001\017\001\018\001\
\019\001\000\000\021\001\022\001\023\001\024\001\255\255\026\001\
\027\001\028\001\029\001\030\001\031\001\032\001\033\001\034\001\
\035\001\036\001\037\001\038\001\039\001\040\001\041\001\255\255\
\255\255\255\255\255\255\255\255\255\255\001\001\255\255\003\001\
\004\001\005\001\255\255\255\255\008\001\009\001\010\001\011\001\
\012\001\000\000\255\255\015\001\016\001\017\001\018\001\019\001\
\255\255\021\001\022\001\255\255\255\255\255\255\255\255\255\255\
\255\255\001\001\030\001\003\001\004\001\005\001\255\255\255\255\
\008\001\009\001\010\001\011\001\012\001\041\001\255\255\015\001\
\016\001\017\001\018\001\019\001\255\255\021\001\255\255\023\001\
\024\001\000\000\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\033\001\034\001\035\001\036\001\037\001\038\001\039\001\
\040\001\041\001\001\001\255\255\003\001\004\001\005\001\006\001\
\255\255\008\001\009\001\010\001\255\255\012\001\013\001\014\001\
\255\255\255\255\255\255\255\255\019\001\020\001\021\001\022\001\
\023\001\024\001\000\000\026\001\027\001\028\001\029\001\255\255\
\031\001\255\255\033\001\034\001\035\001\036\001\037\001\038\001\
\039\001\040\001\001\001\255\255\003\001\004\001\005\001\006\001\
\255\255\008\001\009\001\010\001\255\255\012\001\013\001\014\001\
\255\255\255\255\255\255\255\255\019\001\020\001\021\001\022\001\
\023\001\024\001\000\000\026\001\027\001\028\001\029\001\255\255\
\031\001\255\255\033\001\034\001\035\001\036\001\037\001\038\001\
\039\001\040\001\001\001\255\255\003\001\004\001\005\001\006\001\
\255\255\008\001\009\001\010\001\255\255\012\001\013\001\014\001\
\255\255\255\255\255\255\255\255\019\001\020\001\021\001\022\001\
\023\001\024\001\000\000\026\001\027\001\028\001\029\001\255\255\
\031\001\255\255\033\001\034\001\035\001\036\001\037\001\038\001\
\039\001\040\001\001\001\255\255\003\001\004\001\005\001\006\001\
\255\255\008\001\009\001\010\001\255\255\012\001\013\001\014\001\
\255\255\255\255\255\255\255\255\019\001\020\001\021\001\022\001\
\023\001\024\001\000\000\026\001\027\001\028\001\029\001\255\255\
\031\001\255\255\033\001\034\001\035\001\036\001\037\001\038\001\
\039\001\040\001\001\001\255\255\003\001\004\001\005\001\006\001\
\255\255\008\001\009\001\010\001\255\255\012\001\013\001\014\001\
\255\255\255\255\255\255\255\255\019\001\020\001\021\001\022\001\
\023\001\024\001\000\000\026\001\027\001\028\001\029\001\255\255\
\031\001\255\255\033\001\034\001\035\001\036\001\037\001\038\001\
\039\001\040\001\001\001\255\255\003\001\004\001\005\001\006\001\
\255\255\008\001\009\001\010\001\255\255\012\001\013\001\014\001\
\255\255\255\255\255\255\255\255\019\001\020\001\021\001\022\001\
\023\001\024\001\000\000\026\001\027\001\028\001\029\001\255\255\
\031\001\255\255\033\001\034\001\035\001\036\001\037\001\038\001\
\039\001\040\001\001\001\255\255\003\001\004\001\005\001\006\001\
\255\255\008\001\009\001\010\001\255\255\012\001\013\001\014\001\
\255\255\255\255\255\255\255\255\019\001\020\001\021\001\022\001\
\023\001\024\001\000\000\026\001\027\001\028\001\029\001\255\255\
\031\001\255\255\033\001\034\001\035\001\036\001\037\001\038\001\
\039\001\040\001\255\255\001\001\255\255\003\001\004\001\005\001\
\006\001\255\255\008\001\009\001\010\001\255\255\012\001\013\001\
\014\001\255\255\255\255\255\255\000\000\019\001\020\001\021\001\
\022\001\023\001\024\001\255\255\026\001\027\001\028\001\029\001\
\255\255\031\001\255\255\033\001\034\001\035\001\036\001\037\001\
\038\001\039\001\040\001\001\001\255\255\003\001\004\001\005\001\
\006\001\255\255\008\001\009\001\010\001\255\255\012\001\013\001\
\014\001\000\000\255\255\255\255\255\255\019\001\020\001\021\001\
\022\001\023\001\024\001\255\255\026\001\027\001\028\001\029\001\
\255\255\031\001\255\255\033\001\034\001\035\001\036\001\037\001\
\038\001\039\001\040\001\001\001\255\255\003\001\004\001\005\001\
\006\001\255\255\008\001\009\001\010\001\000\000\012\001\013\001\
\014\001\255\255\255\255\255\255\255\255\019\001\020\001\021\001\
\022\001\023\001\024\001\255\255\026\001\027\001\028\001\029\001\
\255\255\031\001\255\255\033\001\034\001\035\001\036\001\037\001\
\038\001\255\255\255\255\001\001\255\255\003\001\004\001\005\001\
\006\001\000\000\008\001\009\001\010\001\255\255\012\001\013\001\
\014\001\255\255\255\255\255\255\255\255\019\001\020\001\021\001\
\022\001\023\001\024\001\255\255\026\001\027\001\028\001\029\001\
\255\255\031\001\255\255\033\001\034\001\035\001\036\001\037\001\
\038\001\255\255\255\255\001\001\000\000\003\001\004\001\005\001\
\006\001\255\255\008\001\009\001\010\001\255\255\012\001\013\001\
\014\001\255\255\255\255\255\255\255\255\019\001\020\001\021\001\
\022\001\023\001\024\001\255\255\026\001\027\001\028\001\029\001\
\255\255\031\001\255\255\033\001\034\001\035\001\036\001\000\000\
\255\255\255\255\255\255\001\001\255\255\003\001\004\001\005\001\
\006\001\255\255\008\001\009\001\010\001\255\255\012\001\013\001\
\014\001\255\255\255\255\255\255\255\255\019\001\020\001\021\001\
\022\001\023\001\024\001\000\000\026\001\027\001\028\001\029\001\
\255\255\031\001\255\255\033\001\034\001\035\001\036\001\255\255\
\255\255\255\255\255\255\001\001\255\255\003\001\004\001\005\001\
\006\001\000\000\008\001\009\001\010\001\255\255\012\001\013\001\
\014\001\255\255\255\255\000\000\255\255\019\001\020\001\021\001\
\022\001\023\001\024\001\255\255\255\255\000\000\255\255\255\255\
\000\000\031\001\255\255\033\001\034\001\001\001\255\255\003\001\
\004\001\005\001\006\001\255\255\008\001\009\001\010\001\000\000\
\012\001\013\001\014\001\000\000\255\255\255\255\255\255\019\001\
\020\001\021\001\022\001\023\001\024\001\255\255\000\000\255\255\
\255\255\255\255\255\255\031\001\255\255\033\001\034\001\255\255\
\255\255\255\255\001\001\255\255\003\001\004\001\005\001\006\001\
\255\255\008\001\009\001\010\001\255\255\012\001\013\001\014\001\
\255\255\255\255\255\255\255\255\019\001\020\001\021\001\022\001\
\023\001\024\001\255\255\255\255\255\255\255\255\255\255\255\255\
\031\001\255\255\033\001\034\001\255\255\255\255\001\001\255\255\
\003\001\004\001\005\001\006\001\255\255\008\001\009\001\010\001\
\255\255\012\001\013\001\014\001\255\255\255\255\255\255\255\255\
\019\001\020\001\021\001\022\001\023\001\024\001\255\255\255\255\
\255\255\255\255\255\255\255\255\031\001\255\255\033\001\034\001\
\255\255\255\255\001\001\255\255\003\001\004\001\005\001\006\001\
\255\255\008\001\009\001\010\001\255\255\012\001\013\001\014\001\
\255\255\255\255\255\255\255\255\019\001\020\001\021\001\022\001\
\023\001\024\001\255\255\255\255\255\255\255\255\255\255\255\255\
\031\001\255\255\033\001\034\001\255\255\001\001\255\255\003\001\
\004\001\005\001\006\001\255\255\008\001\009\001\010\001\255\255\
\012\001\013\001\014\001\255\255\255\255\255\255\255\255\019\001\
\020\001\021\001\022\001\023\001\024\001\255\255\255\255\255\255\
\255\255\255\255\255\255\031\001\255\255\255\255\034\001\255\255\
\001\001\255\255\003\001\004\001\005\001\006\001\255\255\008\001\
\009\001\010\001\255\255\012\001\013\001\014\001\255\255\255\255\
\255\255\255\255\019\001\020\001\021\001\022\001\255\255\255\255\
\255\255\255\255\255\255\255\255\001\001\255\255\003\001\004\001\
\005\001\006\001\255\255\008\001\009\001\010\001\255\255\012\001\
\013\001\014\001\255\255\255\255\255\255\255\255\019\001\020\001\
\021\001\022\001\001\001\255\255\003\001\004\001\005\001\006\001\
\255\255\008\001\009\001\010\001\255\255\012\001\013\001\014\001\
\255\255\006\001\255\255\255\255\019\001\020\001\021\001\022\001\
\013\001\014\001\255\255\006\001\255\255\255\255\006\001\020\001\
\255\255\022\001\013\001\014\001\255\255\013\001\014\001\255\255\
\255\255\020\001\255\255\022\001\020\001\006\001\022\001\255\255\
\255\255\006\001\255\255\255\255\013\001\014\001\255\255\255\255\
\013\001\014\001\255\255\020\001\006\001\022\001\255\255\020\001\
\255\255\022\001\255\255\013\001\014\001\255\255\255\255\255\255\
\255\255\255\255\020\001\001\001\022\001\003\001\004\001\005\001\
\255\255\255\255\008\001\009\001\010\001\011\001\012\001\255\255\
\014\001\015\001\016\001\017\001\018\001\019\001\255\255\021\001\
\255\255\023\001\024\001\255\255\026\001\027\001\028\001\029\001\
\030\001\031\001\032\001\033\001\034\001\035\001\036\001\037\001\
\038\001\039\001\040\001\041\001\001\001\255\255\003\001\004\001\
\005\001\255\255\255\255\008\001\009\001\010\001\011\001\012\001\
\255\255\255\255\015\001\016\001\017\001\018\001\019\001\255\255\
\021\001\255\255\023\001\024\001\255\255\026\001\027\001\028\001\
\029\001\030\001\031\001\032\001\033\001\034\001\035\001\036\001\
\037\001\038\001\039\001\040\001\041\001\001\001\255\255\003\001\
\004\001\005\001\255\255\255\255\008\001\009\001\010\001\011\001\
\012\001\255\255\255\255\015\001\016\001\017\001\018\001\019\001\
\255\255\021\001\255\255\255\255\255\255\255\255\255\255\011\001\
\255\255\255\255\030\001\015\001\016\001\017\001\018\001\255\255\
\255\255\255\255\255\255\023\001\024\001\041\001\026\001\027\001\
\028\001\029\001\030\001\031\001\032\001\033\001\034\001\035\001\
\036\001\037\001\038\001\039\001\040\001\041\001\011\001\255\255\
\255\255\255\255\015\001\016\001\017\001\018\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\026\001\027\001\028\001\
\029\001\030\001\255\255\032\001\033\001\255\255\035\001\036\001\
\037\001\038\001\039\001\040\001\041\001\011\001\255\255\255\255\
\255\255\015\001\016\001\017\001\018\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\026\001\027\001\028\001\029\001\
\030\001\255\255\032\001\255\255\255\255\035\001\036\001\037\001\
\038\001\039\001\040\001\041\001\011\001\255\255\255\255\255\255\
\015\001\016\001\017\001\018\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\011\001\030\001\
\255\255\032\001\015\001\016\001\017\001\018\001\255\255\255\255\
\039\001\040\001\041\001\255\255\255\255\255\255\255\255\255\255\
\255\255\030\001\255\255\032\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\041\001"

let yynames_const = "\
  EOF\000\
  LET\000\
  IN\000\
  REC\000\
  FUN\000\
  TRUE\000\
  FALSE\000\
  REF\000\
  IF\000\
  THEN\000\
  ELSE\000\
  HD\000\
  TL\000\
  FST\000\
  SND\000\
  LPAREN\000\
  RPAREN\000\
  LBRACK\000\
  RBRACK\000\
  SEMICOLON\000\
  COMMA\000\
  RIGHTARROW\000\
  EQ\000\
  LT\000\
  GT\000\
  NEQ\000\
  DEREF\000\
  ASSIGN\000\
  CONS\000\
  ANDAND\000\
  OROR\000\
  PLUS\000\
  MINUS\000\
  MULT\000\
  DIV\000\
  CARET\000\
  AT\000\
  NOT\000\
  APP\000\
  "

let yynames_block = "\
  INTEGER_LITERAL\000\
  FLOAT_LITERAL\000\
  STRING_LITERAL\000\
  IDENT\000\
  "

let yyact = [|
  (fun _ -> failwith "parser")
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'exp) in
    Obj.repr(
# 41 "miniocamlparse.mly"
                                ( _1 )
# 576 "miniocamlparse.ml"
               : Miniocamlast.exp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'exp) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 44 "miniocamlparse.mly"
                                ( Operation(_1,Semicolon,_3) )
# 584 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'exp) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 45 "miniocamlparse.mly"
                                ( Operation(_1,Comma,_3) )
# 592 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'exp) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 46 "miniocamlparse.mly"
                                ( Operation(_1,Equals,_3) )
# 600 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'exp) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 47 "miniocamlparse.mly"
                                ( Operation(_1,LessThan,_3) )
# 608 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'exp) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 48 "miniocamlparse.mly"
                                ( Operation(_1,GreaterThan,_3) )
# 616 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'exp) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 49 "miniocamlparse.mly"
                                ( Operation(_1,NotEquals,_3) )
# 624 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'exp) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 50 "miniocamlparse.mly"
                                ( Operation(_1,Assign,_3) )
# 632 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'exp) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 51 "miniocamlparse.mly"
                                ( Operation(_1,And,_3) )
# 640 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'exp) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 52 "miniocamlparse.mly"
                                ( Operation(_1,Or,_3) )
# 648 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'exp) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 53 "miniocamlparse.mly"
                                ( Operation(_1,Plus,_3) )
# 656 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'exp) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 54 "miniocamlparse.mly"
                                ( Operation(_1,Minus,_3) )
# 664 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'exp) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 55 "miniocamlparse.mly"
                                ( Operation(_1,Mult,_3) )
# 672 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'exp) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 56 "miniocamlparse.mly"
                                ( Operation(_1,Div,_3) )
# 680 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'exp) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 65 "miniocamlparse.mly"
                                ( Operation(_1,StringAppend,_3) )
# 688 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'exp) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 66 "miniocamlparse.mly"
                                ( Operation(_1,ListAppend,_3) )
# 696 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'exp) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 67 "miniocamlparse.mly"
                                ( Operation(_1,Cons,_3) )
# 704 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 68 "miniocamlparse.mly"
                                ( UnaryOperation(Ref,_2) )
# 711 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 69 "miniocamlparse.mly"
                                ( UnaryOperation(Deref,_2) )
# 718 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 70 "miniocamlparse.mly"
                                ( UnaryOperation(Not,_2) )
# 725 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 71 "miniocamlparse.mly"
                                ( UnaryOperation(Head,_2) )
# 732 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 72 "miniocamlparse.mly"
                                ( UnaryOperation(Tail,_2) )
# 739 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 73 "miniocamlparse.mly"
                                ( UnaryOperation(Fst,_2) )
# 746 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 74 "miniocamlparse.mly"
                                ( UnaryOperation(Snd,_2) )
# 753 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 75 "miniocamlparse.mly"
                                ( Var _1 )
# 760 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int) in
    Obj.repr(
# 76 "miniocamlparse.mly"
                                ( IntConst _1 )
# 767 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 78 "miniocamlparse.mly"
                                ( StrConst _1 )
# 774 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    Obj.repr(
# 79 "miniocamlparse.mly"
                                ( True )
# 780 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    Obj.repr(
# 80 "miniocamlparse.mly"
                                ( False )
# 786 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'exp) in
    Obj.repr(
# 81 "miniocamlparse.mly"
                                ( List2 _2 )
# 793 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    Obj.repr(
# 82 "miniocamlparse.mly"
                                ( List [] )
# 799 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'exp) in
    Obj.repr(
# 83 "miniocamlparse.mly"
                                ( Tuple2 _2 )
# 806 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'def) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 84 "miniocamlparse.mly"
                                ( let (id,args,e) = _2 in
                                  Let2(id,args,e,_4) )
# 815 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'def) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 86 "miniocamlparse.mly"
                                ( let (id,args,e) = _3 in
                                  Rec2(id,args,e,_5) )
# 824 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 88 "miniocamlparse.mly"
                                ( Fun(_2,_4) )
# 832 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'exp) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 89 "miniocamlparse.mly"
                                ( App(_1,_2) )
# 840 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 4 : 'exp) in
    let _4 = (Parsing.peek_val __caml_parser_env 2 : 'exp) in
    let _6 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 90 "miniocamlparse.mly"
                                ( If(_2,_4,_6) )
# 849 "miniocamlparse.ml"
               : 'exp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'exp) in
    Obj.repr(
# 93 "miniocamlparse.mly"
                                ( (_1,_2,_4) )
# 858 "miniocamlparse.ml"
               : 'def))
; (fun __caml_parser_env ->
    Obj.repr(
# 96 "miniocamlparse.mly"
                                ( [] )
# 864 "miniocamlparse.ml"
               : 'args))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 97 "miniocamlparse.mly"
                                ( _1 @ [_2] )
# 872 "miniocamlparse.ml"
               : 'args))
(* Entry program *)
; (fun __caml_parser_env -> raise (Parsing.YYexit (Parsing.peek_val __caml_parser_env 0)))
|]
let yytables =
  { Parsing.actions=yyact;
    Parsing.transl_const=yytransl_const;
    Parsing.transl_block=yytransl_block;
    Parsing.lhs=yylhs;
    Parsing.len=yylen;
    Parsing.defred=yydefred;
    Parsing.dgoto=yydgoto;
    Parsing.sindex=yysindex;
    Parsing.rindex=yyrindex;
    Parsing.gindex=yygindex;
    Parsing.tablesize=yytablesize;
    Parsing.table=yytable;
    Parsing.check=yycheck;
    Parsing.error_function=parse_error;
    Parsing.names_const=yynames_const;
    Parsing.names_block=yynames_block }
let program (lexfun : Lexing.lexbuf -> token) (lexbuf : Lexing.lexbuf) =
   (Parsing.yyparse yytables 1 lexfun lexbuf : Miniocamlast.exp)
